@import 'variables';
@import 'functions';
@import "colors";

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
    $min: map-get($breakpoints, $name);
    @if $min {
        @media (min-width: $min) {
            @content;
        }
    } @else {
        @content;
    }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
    $max: map-get($breakpoints, $name);
    @if $max {
        @media (max-width: $max) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin fontSize($size) {
    font-size: calculateRem($size);
}

@mixin clearfix() {
    &::after {
        display: block;
        clear: both;
        content: '';
    }
}

@mixin formFieldFocusTransition() {
    -webkit-transition: all 0.30s ease-in-out;
    -moz-transition: all 0.30s ease-in-out;
    -ms-transition: all 0.30s ease-in-out;
    -o-transition: all 0.30s ease-in-out;
}
@mixin formFieldFocusedState() {
    box-shadow: 0 0 5px $blue-glow;
    //border: 1px solid $blue-glow;
    outline: none;
}
