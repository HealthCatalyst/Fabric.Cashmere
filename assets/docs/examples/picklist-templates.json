{
    "tsconfig.json": "{\n    \"compileOnSave\": false,\n    \"compilerOptions\": {\n        \"baseUrl\": \"./\",\n        \"outDir\": \"./dist/out-tsc\",\n        \"sourceMap\": true,\n        \"declaration\": false,\n        \"module\": \"es2015\",\n        \"moduleResolution\": \"node\",\n        \"experimentalDecorators\": true,\n        \"target\": \"es2022\",\n        \"typeRoots\": [\"node_modules/@types\"],\n        \"lib\": [\"es2018\", \"dom\"]\n    }\n}\n",
    "stackblitz.md": "This directory contains the Angular CLI project files used in the StackBlitz. For the most part, you should not need to edit files in this directory.\n\nTwo exceptions worth noting:\n- `styles.scss` contains global styles for the examples, there may be occasions to add these\n- `package.json` tweak this if it is determined that a particular third-party library should be preoloaded for a stackblitz example\n\nFor more detail on working with examples, see https://cashmere.healthcatalyst.net/guides/working-with-examples.\n",
    "package.json": "{\n  \"name\": \"project-template\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^18.2.13\",\n    \"@angular/cdk\": \"^18.2.4\",\n    \"@angular/common\": \"^18.2.13\",\n    \"@angular/compiler\": \"^18.2.13\",\n    \"@angular/core\": \"^18.2.13\",\n    \"@angular/forms\": \"^18.2.13\",\n    \"@angular/platform-browser\": \"^18.2.13\",\n    \"@angular/platform-browser-dynamic\": \"^18.2.13\",\n    \"@angular/platform-server\": \"18.2.13\",\n    \"@angular/router\": \"^18.2.13\",\n    \"@ng-select/ng-select\": \"^13.9.1\",\n    \"@angular-slider/ngx-slider\": \"^18.0.0\",\n    \"core-js\": \"^2.5.4\",\n    \"rxjs\": \"^6.6.0\",\n    \"zone.js\": \"~0.15.0\",\n    \"@healthcatalyst/cashmere\": \"*\",\n    \"notosans-fontface\": \"^1.3.0\",\n    \"@fortawesome/fontawesome-free\": \"^6.7.2\",\n    \"sugar\": \"^2.0.6\",\n    \"lodash\": \"^4.17.21\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"^18.2.15\",\n    \"@angular/cli\": \"^18.2.15\",\n    \"@angular/compiler-cli\": \"^18.2.13\",\n    \"@angular/language-service\": \"18.2.13\",\n    \"@types/node\": \"^18.14.4\",\n    \"@types/jasmine\": \"~3.8.0\",\n    \"@types/jasminewd2\": \"~2.0.2\",\n    \"codelyzer\": \"^6.0.0\",\n    \"jasmine-core\": \"~3.8.0\",\n    \"jasmine-spec-reporter\": \"~5.0.0\",\n    \"karma\": \"~6.3.16\",\n    \"karma-chrome-launcher\": \"~3.1.0\",\n    \"karma-coverage-istanbul-reporter\": \"~3.0.2\",\n    \"karma-jasmine\": \"~4.0.0\",\n    \"karma-jasmine-html-reporter\": \"^1.5.0\",\n    \"protractor\": \"~5.4.0\",\n    \"ts-node\": \"6.1.7\",\n    \"tslint\": \"~6.1.0\",\n    \"typescript\": \"~5.4.5\"\n  }\n}\n",
    "angular.json": "{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n        \"project-template\": {\n            \"root\": \"\",\n            \"sourceRoot\": \"src\",\n            \"projectType\": \"application\",\n            \"prefix\": \"app\",\n            \"schematics\": {\n                \"@schematics/angular:component\": {\n                    \"styleext\": \"scss\"\n                }\n            },\n            \"architect\": {\n                \"build\": {\n                    \"builder\": \"@angular-devkit/build-angular:browser\",\n                    \"options\": {\n                        \"outputPath\": \"dist/project-template\",\n                        \"index\": \"src/index.html\",\n                        \"main\": \"src/main.ts\",\n                        \"polyfills\": \"src/polyfills.ts\",\n                        \"tsConfig\": \"src/tsconfig.app.json\",\n                        \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n                        \"styles\": [\"src/styles.scss\"]\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"fileReplacements\": [\n                                {\n                                    \"replace\": \"src/environments/environment.ts\",\n                                    \"with\": \"src/environments/environment.prod.ts\"\n                                }\n                            ],\n                            \"optimization\": true,\n                            \"outputHashing\": \"all\",\n                            \"sourceMap\": false,\n                            \"extractCss\": true,\n                            \"namedChunks\": false,\n                            \"aot\": true,\n                            \"extractLicenses\": true,\n                            \"vendorChunk\": false,\n                            \"buildOptimizer\": true,\n                            \"budgets\": [\n                                {\n                                    \"type\": \"initial\",\n                                    \"maximumWarning\": \"2mb\",\n                                    \"maximumError\": \"5mb\"\n                                }\n                            ]\n                        }\n                    }\n                },\n                \"serve\": {\n                    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n                    \"options\": {\n                        \"browserTarget\": \"project-template:build\"\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"browserTarget\": \"project-template:build:production\"\n                        }\n                    }\n                },\n                \"extract-i18n\": {\n                    \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n                    \"options\": {\n                        \"browserTarget\": \"project-template:build\"\n                    }\n                },\n                \"test\": {\n                    \"builder\": \"@angular-devkit/build-angular:karma\",\n                    \"options\": {\n                        \"main\": \"src/test.ts\",\n                        \"polyfills\": \"src/polyfills.ts\",\n                        \"tsConfig\": \"src/tsconfig.spec.json\",\n                        \"karmaConfig\": \"src/karma.conf.js\",\n                        \"styles\": [\"src/styles.scss\"],\n                        \"scripts\": [],\n                        \"assets\": [\"src/favicon.ico\", \"src/assets\"]\n                    }\n                },\n                \"lint\": {\n                    \"builder\": \"@angular-devkit/build-angular:tslint\",\n                    \"options\": {\n                        \"tsConfig\": [\"src/tsconfig.app.json\", \"src/tsconfig.spec.json\"],\n                        \"exclude\": [\"**/node_modules/**\"]\n                    }\n                }\n            }\n        },\n        \"project-template-e2e\": {\n            \"root\": \"e2e/\",\n            \"projectType\": \"application\",\n            \"prefix\": \"\",\n            \"architect\": {\n                \"e2e\": {\n                    \"builder\": \"@angular-devkit/build-angular:protractor\",\n                    \"options\": {\n                        \"protractorConfig\": \"e2e/protractor.conf.js\",\n                        \"devServerTarget\": \"project-template:serve\"\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"devServerTarget\": \"project-template:serve:production\"\n                        }\n                    }\n                },\n                \"lint\": {\n                    \"builder\": \"@angular-devkit/build-angular:tslint\",\n                    \"options\": {\n                        \"tsConfig\": \"e2e/tsconfig.e2e.json\",\n                        \"exclude\": [\"**/node_modules/**\"]\n                    }\n                }\n            }\n        }\n    },\n    \"defaultProject\": \"project-template\"\n}\n",
    "src/tsconfig.app.json": "{\n    \"extends\": \"../tsconfig.json\",\n    \"compilerOptions\": {\n        \"outDir\": \"../out-tsc/app\",\n        \"types\": []\n    },\n    \"exclude\": [\"test.ts\", \"**/*.spec.ts\"]\n}\n",
    "src/styles.scss": "$fa-font-path: '../webfonts';\n@import '~@fortawesome/fontawesome-free/scss/fontawesome';\n@import '~@fortawesome/fontawesome-free/scss/regular';\n@import '~@fortawesome/fontawesome-free/scss/solid';\n@import '~@fortawesome/fontawesome-free/scss/brands';\n\n$notosans-fontface-path: \"node_modules/notosans-fontface/fonts\";\n@import \"~notosans-fontface/scss/notosans-fontface-allweight\";\n\n$hc-icons-font-path: 'node_modules/@healthcatalyst/cashmere/hcicons';\n@import '@healthcatalyst/cashmere/hcicons2/hcicons2';\n\n@import '@healthcatalyst/cashmere/scss/cashmere';\n\n// global styles for stackblitz examples\n.demo-button {\n    margin-top: 10px !important;\n    margin-right: 10px !important;\n}\n\nhc-example-viewer .hc-tab-content-horizontal {\n    padding: 3px;\n}\n\n.pipe-output {\n    font-weight: 600px;\n    font-size: 22px;\n}\n",
    "src/polyfills.ts": "/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/**\n * IE11 requires the following for NgClass support on SVG elements\n */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\n import 'zone.js';  // Included with Angular CLI.\n\n\n /***************************************************************************************************\n  * APPLICATION IMPORTS\n  */\n",
    "src/main.ts": "import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n",
    "src/index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>ProjectTemplate</title>\n  <base href=\"/\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body>\n  <app-root></app-root>\n</body>\n</html>\n",
    "src/environments/environment.ts": "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n",
    "src/environments/environment.prod.ts": "export const environment = {\n    production: true\n};\n",
    "src/assets/.gitkeep": "",
    "src/app/example-container.component.ts": "/* eslint-disable @angular-eslint/component-selector */\nimport {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-example-container',\n    template: '<hc-example></hc-example>',\n    standalone: false\n})\nexport class ExampleContainerComponent {}\n",
    "src/app/cashmere.module.ts": "import {NgModule} from '@angular/core';\nimport {\n    AccordionModule,\n    AppSwitcherModule,\n    BreadcrumbsModule,\n    BannerModule,\n    ButtonModule,\n    ButtonToggleModule,\n    CheckboxModule,\n    ChipModule,\n    ColumnMenuModule,\n    DatepickerModule,\n    DateRangeModule,\n    DrawerModule,\n    DragListModule,\n    EnvSwitcherModule,\n    FormFieldModule,\n    IconModule,\n    InputModule,\n    InstanceSwitcherModule,\n    ListModule,\n    MeasurableModule,\n    ModalModule,\n    ReleaseNotesModalModule,\n    MultiselectModule,\n    NavbarModule,\n    FileUploaderModule,\n    PaginationModule,\n    PicklistOldModule,\n    PicklistModule,\n    PipesModule,\n    PopModule,\n    ProgressIndicatorsModule,\n    RadioButtonModule,\n    ResizableModule,\n    ScrollNavModule,\n    SearchBarModule,\n    SelectModule,\n    SidenavModule,\n    SortModule,\n    SliderModule,\n    SlideToggleModule,\n    StepperModule,\n    SubnavModule,\n    TabsModule,\n    TableModule,\n    TileModule,\n    ToasterModule,\n    TypeformSurveyModule\n} from '@healthcatalyst/cashmere';\n\n@NgModule({\n    exports: [\n        AccordionModule,\n        AppSwitcherModule,\n        BreadcrumbsModule,\n        BannerModule,\n        ButtonModule,\n        ButtonToggleModule,\n        CheckboxModule,\n        ChipModule,\n        ColumnMenuModule,\n        DatepickerModule,\n        DateRangeModule,\n        DrawerModule,\n        DragListModule,\n        EnvSwitcherModule,\n        FormFieldModule,\n        IconModule,\n        InputModule,\n        InstanceSwitcherModule,\n        ListModule,\n        MeasurableModule,\n        ModalModule,\n        ReleaseNotesModalModule,\n        MultiselectModule,\n        FileUploaderModule,\n        NavbarModule,\n        PaginationModule,\n        PicklistOldModule,\n        PicklistModule,\n        PipesModule,\n        PopModule,\n        ProgressIndicatorsModule,\n        RadioButtonModule,\n        ResizableModule,\n        ScrollNavModule,\n        SearchBarModule,\n        SelectModule,\n        SortModule,\n        SidenavModule,\n        SliderModule,\n        SlideToggleModule,\n        StepperModule,\n        SubnavModule,\n        TableModule,\n        TabsModule,\n        TileModule,\n        ToasterModule,\n        TypeformSurveyModule\n    ]\n})\nexport class CashmereModule {}\n",
    "src/app/app.module.ts": "import {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {ExampleContainerComponent} from './example-container.component';\nimport {CashmereModule} from './cashmere.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {PicklistTemplatesExampleComponent} from './picklist-templates/picklist-templates-example.component';\n\n@NgModule({\n    declarations: [AppComponent, ExampleContainerComponent, PicklistTemplatesExampleComponent],\n    imports: [BrowserModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, AppRoutingModule, CashmereModule],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
    "src/app/app.component.ts": "/* eslint-disable @angular-eslint/component-selector */\nimport {Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    template: '<router-outlet></router-outlet>',\n    styleUrls: ['../styles.scss'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: false\n})\nexport class AppComponent {}\n",
    "src/app/app-routing.module.ts": "import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ExampleContainerComponent} from './example-container.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ExampleContainerComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {})],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
    "src/app/picklist-templates/picklist-templates-example.component.ts": "import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\ninterface Transport {\n    name: string;\n    icon: string;\n    color: string;\n    type: string | null;\n}\n@Component({\n    selector: 'hc-picklist-templates-example',\n    templateUrl: './picklist-templates-example.component.html',\n    styleUrls: ['./picklist-templates-example.component.scss'],\n    standalone: false\n})\nexport class PicklistTemplatesExampleComponent {\n    readonly selected = new FormControl([], {nonNullable: true});\n    transportOptions: Transport[] = [\n        {name: 'Train', icon: 'train', color: 'green', type: 'land'},\n        {name: 'Bus', icon: 'bus', color: 'blue', type: 'land'},\n        {name: 'Ferry', icon: 'ship', color: 'teal', type: 'sea'},\n        {name: 'Space Shuttle', icon: 'space-shuttle', color: 'slate-gray', type: 'air'},\n        {name: 'Plane', icon: 'plane', color: 'deep-red', type: 'air'},\n        {name: 'Rocket', icon: 'rocket', color: 'orange', type: 'air'},\n        {name: 'Sled', icon: 'snowflake', color: 'purple', type: null}\n    ];\n\n    groupByFn = (item: Transport): string | null => item.type;\n\n    customSearchFn(term: string, item: Transport): boolean {\n        term = term?.toLowerCase();\n        return item.name.toLowerCase().indexOf(term) > -1 || (!!item.type && item.type.toLowerCase().indexOf(term) > -1);\n    }\n\n    sortFn(a: {label: string}, b: {label: string}): number {\n        return a.label.localeCompare(b.label);\n    }\n}\n",
    "src/app/picklist-templates/picklist-templates-example.component.scss": "$slate-gray-100: #f0f3f6;\n$blue: #00aeff;\n$green: #00a859;\n$purple: #6e53a3;\n$teal: #00acac;\n$orange: #f8961d;\n$dark-blue: #006d9a;\n$offblack: #333;\n$white: #fff;\n$deep-red: #cc2027;\n$slate-gray-600: #4f565c;\n$slate-gray-100: #f0f3f6;\n$gray-300: #ccc;\n\n.group-row {\n    font-size: 12px;\n    padding: 5px 20px;\n    margin: -8px -10px;\n    text-transform: capitalize;\n\n    .transport-group-icon {\n        float: right;\n        color: $blue;\n        cursor: pointer;\n    }\n}\n\n.ng-value-label hc-icon {\n    margin-right: 3px;\n}\n\n.opt-row {\n    display: flex;\n    align-items: center;\n}\n\n.ico-wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    height: 28px;\n    width: 28px;\n    margin-right: 7px;\n    color: $white;\n\n    &.blue {\n        background-color: $blue;\n    }\n    &.green {\n        background-color: $green;\n    }\n    &.teal {\n        background-color: $teal;\n    }\n    &.purple {\n        background-color: $purple;\n    }\n    &.orange {\n        background-color: $orange;\n    }\n    &.slate-gray {\n        background-color: $slate-gray-600;\n    }\n    &.deep-red {\n        background-color: $deep-red;\n    }\n}\n\n.custom-header {\n    background-color: $dark-blue;\n    color: white;\n    padding: 7px 12px;\n    border-radius: 4px;\n    margin-bottom: 5px;\n    line-height: 1.3;\n    .header-text {\n        font-weight: 600;\n    }\n    .template-callout {\n        color: $slate-gray-100;\n    }\n}\n\n.fa-suitcase-rolling {\n    margin-right: 5px;\n}\n\n.search-for {\n    float: right;\n}\n\n.custom-toolbar,\n.custom-footer {\n    border: 1px solid $gray-300;\n    background-color: $slate-gray-100;\n    color: $offblack;\n    padding: 5px 12px;\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n    margin: -5px 0;\n    width: 100%;\n    font-size: 11px;\n    display: flex;\n    justify-content: space-between;\n}\n\n.custom-footer {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px;\n}\n\n.custom-item {\n    border: 2px dashed $gray-300;\n    padding: 4px;\n    border-radius: 4px;\n    display: flex;\n    flex-direction: column;\n\n    & > div {\n        margin-bottom: 5px;\n    }\n\n    .fa {\n        font-size: 24px;\n        margin-bottom: 10px;\n    }\n}\n",
    "src/app/picklist-templates/picklist-templates-example.component.html": "<p>\n    The appearance of the picklist is highly customizable using the template directives for the group rows, option rows, header, footer,\n    toolbar, etc.\n</p>\n<br />\n<hc-picklist\n    [items]=\"transportOptions\"\n    bindLabel=\"name\"\n    bindValue=\"name\"\n    [formControl]=\"selected\"\n    [sortFn]=\"sortFn\"\n    [searchFn]=\"customSearchFn\"\n    [groupBy]=\"groupByFn\"\n    [canSelectGroup]=\"false\"\n    [canCloseGroup]=\"true\"\n    orphanItemsGroupName=\"Other Travel Methods\"\n    [closeGroupsByDefault]=\"false\"\n    [addCustomItem]=\"true\"\n>\n    <!-- Group row template -->\n    <ng-template hcPickOptgroupTmp let-item=\"hcOption\">\n        <div class=\"hc-pick-optgroup-inner group-row\">\n            <span>{{ item.value.name }}</span>\n            <span>({{ item.children.length }})</span>\n            <span\n                class=\"transport-group-icon\"\n                [class.icon-chev-down]=\"!item.isClosed\"\n                [class.icon-chev-up]=\"item.isClosed\"\n                (dblclick)=\"$event.stopPropagation()\"\n                (click)=\"item.toggleOpenState($event)\"\n            ></span>\n        </div>\n    </ng-template>\n\n    <!-- Option row template -->\n    <ng-template hcPickOptionTmp let-item=\"item\" let-search=\"searchTerm\">\n        <div class=\"opt-row\" title=\"Travel by {{ item.type }}: {{ item.name }}\">\n            <span class=\"ico-wrapper {{ item.color || 'slate-gray' }}\">\n                <hc-icon fontSet=\"fa-solid\" fontIcon=\"fa-{{ item.icon || item.name }}\" hcIconSm></hc-icon>\n            </span>\n            {{ item.name }}\n        </div>\n    </ng-template>\n\n    <!-- Left pane header template -->\n    <ng-template hcPaneHeaderLeftTmp>\n        <div class=\"custom-header\">\n            <div class=\"header-text\">\n                <span class=\"fa fa-suitcase-rolling\"></span>\n                Available Transportation\n            </div>\n        </div>\n    </ng-template>\n\n    <!-- Right pane header template -->\n    <ng-template hcPaneHeaderRightTmp>\n        <div class=\"custom-header\">\n            <div class=\"header-text\">\n                <span class=\"fa fa-suitcase-rolling\"></span>\n                Selected Transportation\n            </div>\n        </div>\n    </ng-template>\n\n    <!-- Pane toolbar template -->\n    <ng-template hcPaneToolbarTmp let-itemsList=\"itemsList\" let-searchTerm=\"searchTerm\">\n        <div class=\"custom-toolbar\">\n            <span>Showing {{ itemsList.itemsTotalCountStr }}</span>\n            <span>Searching for: \"{{ searchTerm }}\"</span>\n        </div>\n    </ng-template>\n\n    <!-- Pane footer template -->\n    <ng-template hcPaneFooterTmp let-itemsList=\"itemsList\" let-searchTerm=\"searchTerm\">\n        <div class=\"custom-footer\">\n            <span>This is a custom pane footer.</span>\n            <span>Selected {{ itemsList.selectedItems.length?.toLocaleString() || 0 }}</span>\n        </div>\n    </ng-template>\n\n    <!-- Custom item template - For items added by user via search. -->\n    <ng-template hcPickCustomItemTmp let-search=\"searchTerm\">\n        <div class=\"opt-row custom-item\">\n            <span class=\"fa fa-{{ search }}\"></span>\n            <div>Add new option: \"{{ search }}\"</div>\n            <span class=\"template-callout\">This is a custom item template.</span>\n        </div>\n    </ng-template>\n</hc-picklist>\n\n<br />\n<p>\n    Selected:\n    <code>{{ selected.value | json }}</code>\n</p>\n"
}
