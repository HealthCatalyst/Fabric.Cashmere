{
    "tsconfig.json": "{\n    \"compileOnSave\": false,\n    \"compilerOptions\": {\n        \"baseUrl\": \"./\",\n        \"outDir\": \"./dist/out-tsc\",\n        \"sourceMap\": true,\n        \"declaration\": false,\n        \"module\": \"es2015\",\n        \"moduleResolution\": \"node\",\n        \"experimentalDecorators\": true,\n        \"target\": \"es2022\",\n        \"typeRoots\": [\"node_modules/@types\"],\n        \"lib\": [\"es2018\", \"dom\"]\n    }\n}\n",
    "stackblitz.md": "This directory contains the Angular CLI project files used in the StackBlitz. For the most part, you should not need to edit files in this directory.\n\nTwo exceptions worth noting:\n- `styles.scss` contains global styles for the examples, there may be occasions to add these\n- `package.json` tweak this if it is determined that a particular third-party library should be preoloaded for a stackblitz example\n\nFor more detail on working with examples, see https://cashmere.healthcatalyst.net/guides/working-with-examples.\n",
    "package.json": "{\n  \"name\": \"project-template\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^18.2.13\",\n    \"@angular/cdk\": \"^18.2.4\",\n    \"@angular/common\": \"^18.2.13\",\n    \"@angular/compiler\": \"^18.2.13\",\n    \"@angular/core\": \"^18.2.13\",\n    \"@angular/forms\": \"^18.2.13\",\n    \"@angular/platform-browser\": \"^18.2.13\",\n    \"@angular/platform-browser-dynamic\": \"^18.2.13\",\n    \"@angular/platform-server\": \"18.2.13\",\n    \"@angular/router\": \"^18.2.13\",\n    \"@ng-select/ng-select\": \"^13.9.1\",\n    \"@angular-slider/ngx-slider\": \"^18.0.0\",\n    \"core-js\": \"^2.5.4\",\n    \"rxjs\": \"^6.6.0\",\n    \"zone.js\": \"~0.15.0\",\n    \"@healthcatalyst/cashmere\": \"*\",\n    \"notosans-fontface\": \"^1.3.0\",\n    \"@fortawesome/fontawesome-free\": \"^6.7.2\",\n    \"sugar\": \"^2.0.6\",\n    \"lodash\": \"^4.17.21\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"^18.2.15\",\n    \"@angular/cli\": \"^18.2.15\",\n    \"@angular/compiler-cli\": \"^18.2.13\",\n    \"@angular/language-service\": \"18.2.13\",\n    \"@types/node\": \"^18.14.4\",\n    \"@types/jasmine\": \"~3.8.0\",\n    \"@types/jasminewd2\": \"~2.0.2\",\n    \"codelyzer\": \"^6.0.0\",\n    \"jasmine-core\": \"~3.8.0\",\n    \"jasmine-spec-reporter\": \"~5.0.0\",\n    \"karma\": \"~6.3.16\",\n    \"karma-chrome-launcher\": \"~3.1.0\",\n    \"karma-coverage-istanbul-reporter\": \"~3.0.2\",\n    \"karma-jasmine\": \"~4.0.0\",\n    \"karma-jasmine-html-reporter\": \"^1.5.0\",\n    \"protractor\": \"~5.4.0\",\n    \"ts-node\": \"6.1.7\",\n    \"tslint\": \"~6.1.0\",\n    \"typescript\": \"~5.4.5\"\n  }\n}\n",
    "angular.json": "{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n        \"project-template\": {\n            \"root\": \"\",\n            \"sourceRoot\": \"src\",\n            \"projectType\": \"application\",\n            \"prefix\": \"app\",\n            \"schematics\": {\n                \"@schematics/angular:component\": {\n                    \"styleext\": \"scss\"\n                }\n            },\n            \"architect\": {\n                \"build\": {\n                    \"builder\": \"@angular-devkit/build-angular:browser\",\n                    \"options\": {\n                        \"outputPath\": \"dist/project-template\",\n                        \"index\": \"src/index.html\",\n                        \"main\": \"src/main.ts\",\n                        \"polyfills\": \"src/polyfills.ts\",\n                        \"tsConfig\": \"src/tsconfig.app.json\",\n                        \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n                        \"styles\": [\"src/styles.scss\"]\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"fileReplacements\": [\n                                {\n                                    \"replace\": \"src/environments/environment.ts\",\n                                    \"with\": \"src/environments/environment.prod.ts\"\n                                }\n                            ],\n                            \"optimization\": true,\n                            \"outputHashing\": \"all\",\n                            \"sourceMap\": false,\n                            \"extractCss\": true,\n                            \"namedChunks\": false,\n                            \"aot\": true,\n                            \"extractLicenses\": true,\n                            \"vendorChunk\": false,\n                            \"buildOptimizer\": true,\n                            \"budgets\": [\n                                {\n                                    \"type\": \"initial\",\n                                    \"maximumWarning\": \"2mb\",\n                                    \"maximumError\": \"5mb\"\n                                }\n                            ]\n                        }\n                    }\n                },\n                \"serve\": {\n                    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n                    \"options\": {\n                        \"browserTarget\": \"project-template:build\"\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"browserTarget\": \"project-template:build:production\"\n                        }\n                    }\n                },\n                \"extract-i18n\": {\n                    \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n                    \"options\": {\n                        \"browserTarget\": \"project-template:build\"\n                    }\n                },\n                \"test\": {\n                    \"builder\": \"@angular-devkit/build-angular:karma\",\n                    \"options\": {\n                        \"main\": \"src/test.ts\",\n                        \"polyfills\": \"src/polyfills.ts\",\n                        \"tsConfig\": \"src/tsconfig.spec.json\",\n                        \"karmaConfig\": \"src/karma.conf.js\",\n                        \"styles\": [\"src/styles.scss\"],\n                        \"scripts\": [],\n                        \"assets\": [\"src/favicon.ico\", \"src/assets\"]\n                    }\n                },\n                \"lint\": {\n                    \"builder\": \"@angular-devkit/build-angular:tslint\",\n                    \"options\": {\n                        \"tsConfig\": [\"src/tsconfig.app.json\", \"src/tsconfig.spec.json\"],\n                        \"exclude\": [\"**/node_modules/**\"]\n                    }\n                }\n            }\n        },\n        \"project-template-e2e\": {\n            \"root\": \"e2e/\",\n            \"projectType\": \"application\",\n            \"prefix\": \"\",\n            \"architect\": {\n                \"e2e\": {\n                    \"builder\": \"@angular-devkit/build-angular:protractor\",\n                    \"options\": {\n                        \"protractorConfig\": \"e2e/protractor.conf.js\",\n                        \"devServerTarget\": \"project-template:serve\"\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"devServerTarget\": \"project-template:serve:production\"\n                        }\n                    }\n                },\n                \"lint\": {\n                    \"builder\": \"@angular-devkit/build-angular:tslint\",\n                    \"options\": {\n                        \"tsConfig\": \"e2e/tsconfig.e2e.json\",\n                        \"exclude\": [\"**/node_modules/**\"]\n                    }\n                }\n            }\n        }\n    },\n    \"defaultProject\": \"project-template\"\n}\n",
    "src/tsconfig.app.json": "{\n    \"extends\": \"../tsconfig.json\",\n    \"compilerOptions\": {\n        \"outDir\": \"../out-tsc/app\",\n        \"types\": []\n    },\n    \"exclude\": [\"test.ts\", \"**/*.spec.ts\"]\n}\n",
    "src/styles.scss": "$fa-font-path: '../webfonts';\n@import '~@fortawesome/fontawesome-free/scss/fontawesome';\n@import '~@fortawesome/fontawesome-free/scss/regular';\n@import '~@fortawesome/fontawesome-free/scss/solid';\n@import '~@fortawesome/fontawesome-free/scss/brands';\n\n$notosans-fontface-path: \"node_modules/notosans-fontface/fonts\";\n@import \"~notosans-fontface/scss/notosans-fontface-allweight\";\n\n$hc-icons-font-path: 'node_modules/@healthcatalyst/cashmere/hcicons';\n@import '@healthcatalyst/cashmere/hcicons2/hcicons2';\n\n@import '@healthcatalyst/cashmere/scss/cashmere';\n\n// global styles for stackblitz examples\n.demo-button {\n    margin-top: 10px !important;\n    margin-right: 10px !important;\n}\n\nhc-example-viewer .hc-tab-content-horizontal {\n    padding: 3px;\n}\n\n.pipe-output {\n    font-weight: 600px;\n    font-size: 22px;\n}\n",
    "src/polyfills.ts": "/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/**\n * IE11 requires the following for NgClass support on SVG elements\n */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\n import 'zone.js';  // Included with Angular CLI.\n\n\n /***************************************************************************************************\n  * APPLICATION IMPORTS\n  */\n",
    "src/main.ts": "import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n",
    "src/index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>ProjectTemplate</title>\n  <base href=\"/\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body>\n  <app-root></app-root>\n</body>\n</html>\n",
    "src/environments/environment.ts": "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n",
    "src/environments/environment.prod.ts": "export const environment = {\n    production: true\n};\n",
    "src/assets/.gitkeep": "",
    "src/app/example-container.component.ts": "/* eslint-disable @angular-eslint/component-selector */\nimport {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-example-container',\n    template: '<hc-example></hc-example>',\n    standalone: false\n})\nexport class ExampleContainerComponent {}\n",
    "src/app/cashmere.module.ts": "import {NgModule} from '@angular/core';\nimport {\n    AccordionModule,\n    AppSwitcherModule,\n    BreadcrumbsModule,\n    BannerModule,\n    ButtonModule,\n    ButtonToggleModule,\n    CheckboxModule,\n    ChipModule,\n    ColumnMenuModule,\n    DatepickerModule,\n    DateRangeModule,\n    DrawerModule,\n    DragListModule,\n    EnvSwitcherModule,\n    FormFieldModule,\n    IconModule,\n    InputModule,\n    InstanceSwitcherModule,\n    ListModule,\n    MeasurableModule,\n    ModalModule,\n    ReleaseNotesModalModule,\n    MultiselectModule,\n    NavbarModule,\n    FileUploaderModule,\n    PaginationModule,\n    PicklistOldModule,\n    PicklistModule,\n    PipesModule,\n    PopModule,\n    ProgressIndicatorsModule,\n    RadioButtonModule,\n    ResizableModule,\n    ScrollNavModule,\n    SearchBarModule,\n    SelectModule,\n    SidenavModule,\n    SortModule,\n    SliderModule,\n    SlideToggleModule,\n    StepperModule,\n    SubnavModule,\n    TabsModule,\n    TableModule,\n    TileModule,\n    ToasterModule,\n    TypeformSurveyModule\n} from '@healthcatalyst/cashmere';\n\n@NgModule({\n    exports: [\n        AccordionModule,\n        AppSwitcherModule,\n        BreadcrumbsModule,\n        BannerModule,\n        ButtonModule,\n        ButtonToggleModule,\n        CheckboxModule,\n        ChipModule,\n        ColumnMenuModule,\n        DatepickerModule,\n        DateRangeModule,\n        DrawerModule,\n        DragListModule,\n        EnvSwitcherModule,\n        FormFieldModule,\n        IconModule,\n        InputModule,\n        InstanceSwitcherModule,\n        ListModule,\n        MeasurableModule,\n        ModalModule,\n        ReleaseNotesModalModule,\n        MultiselectModule,\n        FileUploaderModule,\n        NavbarModule,\n        PaginationModule,\n        PicklistOldModule,\n        PicklistModule,\n        PipesModule,\n        PopModule,\n        ProgressIndicatorsModule,\n        RadioButtonModule,\n        ResizableModule,\n        ScrollNavModule,\n        SearchBarModule,\n        SelectModule,\n        SortModule,\n        SidenavModule,\n        SliderModule,\n        SlideToggleModule,\n        StepperModule,\n        SubnavModule,\n        TableModule,\n        TabsModule,\n        TileModule,\n        ToasterModule,\n        TypeformSurveyModule\n    ]\n})\nexport class CashmereModule {}\n",
    "src/app/app.module.ts": "import {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {ExampleContainerComponent} from './example-container.component';\nimport {CashmereModule} from './cashmere.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {TableStickyExampleComponent} from './table-sticky/table-sticky-example.component';\n\n@NgModule({\n    declarations: [AppComponent, ExampleContainerComponent, TableStickyExampleComponent],\n    imports: [BrowserModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, AppRoutingModule, CashmereModule],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
    "src/app/app.component.ts": "/* eslint-disable @angular-eslint/component-selector */\nimport {Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    template: '<router-outlet></router-outlet>',\n    styleUrls: ['../styles.scss'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: false\n})\nexport class AppComponent {}\n",
    "src/app/app-routing.module.ts": "import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ExampleContainerComponent} from './example-container.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ExampleContainerComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {})],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
    "src/app/table-sticky/table-sticky-example.component.ts": "import {Component, OnInit} from '@angular/core';\nimport {HcTableDataSource} from '@healthcatalyst/cashmere';\n\n/**\n * @title Table sticky header\n */\n@Component({\n    selector: 'hc-table-sticky-example',\n    templateUrl: 'table-sticky-example.component.html',\n    styleUrls: ['table-sticky-example.component.scss'],\n    standalone: false\n})\nexport class TableStickyExampleComponent implements OnInit {\n    cols = ['name', 'state', 'population', 'founded', 'size', 'notes'];\n    allCols = ['rank', ...this.cols];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    dataSource: HcTableDataSource<any>;\n    hasBorders = false;\n    stickyHead = true;\n    stickyCol = true;\n    hasGrayBg = false;\n\n    ngOnInit(): void {\n        this.dataSource = new HcTableDataSource(CITY_DATA);\n    }\n}\n\nconst CITY_DATA = [\n    {\n        rank: 1,\n        name: 'New York City',\n        state: 'New York',\n        population: 7888121,\n        founded: 1624,\n        size: 302.6,\n        notes: 'Known for the Statue of Liberty, Empire State Building, Central Park, Times Square, Museums, and the Met'\n    },\n    {\n        rank: 2,\n        name: 'Los Angeles',\n        state: 'California',\n        population: 3792621,\n        founded: 1781,\n        size: 468.7,\n        notes: 'Known for Hollywood, Entertainment, Celebrities, and the Beach'\n    },\n    {\n        rank: 3,\n        name: 'Chicago',\n        state: 'Illinois',\n        population: 2695598,\n        founded: 1837,\n        size: 227.6,\n        notes: 'Known for the Sears (Willis) Tower, the Magnificent Mile, Deep Dish Pizza, and the Cubs'\n    },\n    {\n        rank: 4,\n        name: 'Houston',\n        state: 'Texas',\n        population: 2100263,\n        founded: 1837,\n        size: 599.6,\n        notes: 'Known for NASA, the Astros, and the Rockets'\n    },\n    {\n        rank: 5,\n        name: 'Philadelphia',\n        state: 'Pennsylvania',\n        population: 1526006,\n        founded: 1682,\n        size: 134.1,\n        notes: 'Known for the Liberty Bell, Independence Hall, and the Philly Cheesesteak'\n    },\n    {\n        rank: 6,\n        name: 'Phoenix',\n        state: 'Arizona',\n        population: 1445632,\n        founded: 1881,\n        size: 516.7,\n        notes: 'Known for the Heat, the Suns, and the Grand Canyon'\n    },\n    {\n        rank: 7,\n        name: 'San Antonio',\n        state: 'Texas',\n        population: 1327407,\n        founded: 1718,\n        size: 460.9,\n        notes: 'Known for the Alamo, the River Walk, and the Spurs'\n    },\n    {\n        rank: 8,\n        name: 'San Diego',\n        state: 'California',\n        population: 1307402,\n        founded: 1769,\n        size: 325.2,\n        notes: 'Known for the Zoo, Sea World, and the Beach'\n    },\n    {\n        rank: 9,\n        name: 'Dallas',\n        state: 'Texas',\n        population: 1197816,\n        founded: 1841,\n        size: 340.9,\n        notes: 'Known for the Cowboys, the Mavericks, and the Rangers'\n    },\n    {\n        rank: 10,\n        name: 'San Jose',\n        state: 'California',\n        population: 945942,\n        founded: 1777,\n        size: 176.5,\n        notes: 'Known for Silicon Valley, Tech Companies, and the Sharks'\n    },\n    {\n        rank: 11,\n        name: 'Austin',\n        state: 'Texas',\n        population: 790390,\n        founded: 1839,\n        size: 322.48,\n        notes: 'Known for the Longhorns, the State Capital, and the Music Scene'\n    },\n    {\n        rank: 12,\n        name: 'Indianapolis',\n        state: 'Indiana',\n        population: 843393,\n        founded: 1821,\n        size: 361.5,\n        notes: 'Known for the Indy 500, the Colts, and the Pacers'\n    },\n    {\n        rank: 13,\n        name: 'Jacksonville',\n        state: 'Florida',\n        population: 842583,\n        founded: 1822,\n        size: 747.0,\n        notes: 'Known for the Jaguars, the Beaches, and the Navy'\n    },\n    {\n        rank: 14,\n        name: 'San Francisco',\n        state: 'California',\n        population: 837442,\n        founded: 1776,\n        size: 231.9,\n        notes: 'Known for the Golden Gate Bridge, Alcatraz, and the Cable Cars'\n    },\n    {\n        rank: 15,\n        name: 'Columbus',\n        state: 'Ohio',\n        population: 822553,\n        founded: 1812,\n        size: 210.3,\n        notes: 'Has the largest university in the United States'\n    },\n    {\n        rank: 16,\n        name: 'Charlotte',\n        state: 'North Carolina',\n        population: 792862,\n        founded: 1768,\n        size: 297.7,\n        notes: 'Known for NASCAR, the Hornets, and the Panthers'\n    },\n    {\n        rank: 17,\n        name: 'Fort Worth',\n        state: 'Texas',\n        population: 792727,\n        founded: 1849,\n        size: 339.8,\n        notes: 'Known for the Stockyards, the Cowboys, and the Rangers'\n    },\n    {\n        rank: 18,\n        name: 'Detroit',\n        state: 'Michigan',\n        population: 688701,\n        founded: 1701,\n        size: 138.8,\n        notes: 'Home of the Big Three Automakers'\n    },\n    {\n        rank: 19,\n        name: 'El Paso',\n        state: 'Texas',\n        population: 674433,\n        founded: 1850,\n        size: 256.8,\n        notes: 'Home to the University of Texas at El Paso'\n    },\n    {\n        rank: 20,\n        name: 'Memphis',\n        state: 'Tennessee',\n        population: 653450,\n        founded: 1819,\n        size: 315.1,\n        notes: 'Famous for Elvis Presley, Graceland, and the Blues'\n    }\n];\n",
    "src/app/table-sticky/table-sticky-example.component.scss": "@import '@healthcatalyst/cashmere/scss/_colors';\n\n.example-intro {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 16px;\n}\n\ntd {\n    white-space: nowrap;\n}\n\nth {\n    text-transform: capitalize;\n}\n\n.example-checkboxes {\n    display: flex;\n\n    hc-checkbox {\n        margin-left: 8px;\n    }\n}\n\n.example-wrapper {\n    padding: 24px;\n    border-radius: 4px;\n    border: 2px solid $slate-gray-100;\n}\n\n.gray-example-bg {\n    background-color: $slate-gray-100;\n}\n",
    "src/app/table-sticky/table-sticky-example.component.html": "<div class=\"example-intro\">\n    <span>Example of a table with a sticky header & column.</span>\n    <span class=\"example-checkboxes\">\n        <hc-checkbox [(ngModel)]=\"hasGrayBg\" [tight]=\"true\">Has gray background</hc-checkbox>\n        <hc-checkbox [(ngModel)]=\"hasBorders\" [tight]=\"true\">Has borders</hc-checkbox>\n        <hc-checkbox [(ngModel)]=\"stickyHead\" [tight]=\"true\">Sticky header</hc-checkbox>\n        <hc-checkbox [(ngModel)]=\"stickyCol\" [tight]=\"true\">Sticky column</hc-checkbox>\n    </span>\n</div>\n<div [class.gray-example-bg]=\"hasGrayBg\" class=\"example-wrapper\">\n    <!-- Scrollable table container (to define height) -->\n    <div hcTableContainer tableHeight=\"200\" [hasGrayBg]=\"hasGrayBg\">\n        <table hc-table [dataSource]=\"dataSource\" [borders]=\"hasBorders\">\n            <!-- Sticky column [sticky]=\"true\"-->\n            <ng-container hcColumnDef=\"rank\" [sticky]=\"stickyCol\">\n                <th hc-index-cell *hcHeaderCellDef>Rank</th>\n                <td hc-index-cell *hcCellDef=\"let element\">{{ element.rank }}</td>\n            </ng-container>\n\n            <!-- Other columns -->\n            <ng-container *ngFor=\"let col of cols\" [hcColumnDef]=\"col\">\n                <th hc-header-cell *hcHeaderCellDef>{{ col }}</th>\n                <td hc-cell *hcCellDef=\"let element\">{{ element[col] }}</td>\n            </ng-container>\n\n            <!-- Sticky headers \"... sticky: true\"-->\n            <tr hc-header-row *hcHeaderRowDef=\"allCols; sticky: stickyHead\"></tr>\n\n            <!-- Rows -->\n            <tr hc-row *hcRowDef=\"let row; columns: allCols\"></tr>\n        </table>\n    </div>\n</div>\n"
}
